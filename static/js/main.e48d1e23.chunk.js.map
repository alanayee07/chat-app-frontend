{"version":3,"sources":["components/InputField.js","components/Login.js","socket.io.client/index.js","components/JoinRoom.js","components/OnlineUsers.js","components/ActiveRooms.js","components/ChatRoom.js","App.js","index.js"],"names":["InputField","className","propValue","onChange","placeholder","type","value","required","Login","useState","username","setUsername","roomName","setRoomName","e","target","to","onClick","preventDefault","SocketIo","SocketIoClient","console","log","process","JoinRoom","OnlineUsers","props","usernames","onlineUsers","id","push","getEachOnlineUser","map","user","index","shortid","generate","ActiveRooms","activeRooms","rooms","activeRoomsSet","Set","Object","keys","forEach","add","Array","from","getActiveRooms","room","ChatRoom","location","messages","setMessages","message","setMessage","setOnlineUsers","setActiveRooms","useEffect","on","userMap","usersByRoomMap","queryString","parse","search","emit","userId","msg","prevMsg","chatMsgClassName","moment","timestamp","format","isChatBot","onSubmit","messageObj","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAkBeA,EAdI,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YACnD,OACE,qBAAKH,UAAWA,EAAhB,SACE,uBACEA,UAAU,cACVI,KAAK,OACLD,YAAaA,EACbE,MAAOJ,EACPC,SAAUA,EACVI,UAAQ,OC0BDC,EAlCD,WAAO,IAAD,EAEcC,mBAAS,IAFvB,mBAEXC,EAFW,KAEDC,EAFC,OAGcF,mBAAS,IAHvB,mBAGXG,EAHW,KAGDC,EAHC,KAKlB,OACE,mCACA,qBAAKZ,UAAU,kBAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CACEA,UAAU,iBACVC,UAAWQ,EACXP,SAAU,SAAAW,GAAC,OAAIH,EAAYG,EAAEC,OAAOT,QACpCF,YAAY,qBAGhB,sBAAKH,UAAU,qBAAf,UACE,cAAC,EAAD,CACEA,UAAU,iBACVK,MAAOM,EACPT,SAAU,SAAAW,GAAC,OAAID,EAAYC,EAAEC,OAAOT,QACpCF,YAAY,eAEd,cAAC,IAAD,CAAMY,GAAE,WAAMJ,EAAN,qBAA2BF,EAA3B,qBAAgDE,GAAYK,QAAS,SAAAH,GAAC,OAAMJ,GAAaE,EAAiC,KAArBE,EAAEI,kBAA/G,SACE,wBAAQjB,UAAU,kBAAlB,kC,gBC5BNkB,E,MAAWC,GADiE,KAGlFC,QAAQC,IAAI,mBAAoBC,cACjBJ,QCsBAK,G,MAtBE,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAAc,EAECD,mBAAS,IAFV,mBAExBG,EAFwB,KAEdC,EAFc,KAI/B,OACE,qBAAKZ,UAAU,qBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,uBACEI,KAAK,OACLD,YAAY,OACZE,MAAOM,EACPT,SAAU,SAAAW,GAAC,OAAID,EAAYC,EAAEC,OAAOT,UAEtC,cAAC,IAAD,CAAMU,GAAE,WAAMJ,EAAN,qBAA2BF,EAA3B,qBAAgDE,GAAxD,SACE,wBAAQX,UAAU,kBAAlB,gC,mDCeKwB,G,OA7BK,SAACC,GAEnB,IAAMC,EAAY,GAalB,OAX0B,SAACC,GAGzB,IAAK,IAAIC,KAAMH,EAAME,YACnBD,EAAUG,KAAKJ,EAAME,YAAYC,IAKrCE,CAAkBL,EAAME,aAGtB,sBAAK3B,UAAU,wBAAf,UACE,oBAAIA,UAAU,qBAAd,4BACA,qBAAKA,UAAU,mBAAf,SACG0B,EAAUK,KAAI,SAACC,EAAMC,GACpB,OACE,8BAA+BD,GAArBE,IAAQC,sBCYfC,G,OAjCK,SAACC,GAEnB,IAAIC,EAeJ,OAbuB,SAACD,GACtB,IAAIE,EAAiB,IAAIC,IAE1BC,OAAOC,KAAKL,GAAaM,SAAQ,SAAAf,GAAE,OAClCW,EAAeK,IAAIP,EAAYT,GAAI,OAEpCU,EAAQO,MAAMC,KAAKP,GAIpBQ,CAAeV,EAAYA,aAIzB,sBAAKrC,UAAU,wBAAf,UACE,oBAAIA,UAAU,qBAAd,wBACA,qBAAKA,UAAU,mBAAf,SACGsC,EAAMP,KAAI,SAAAiB,GAAI,OACb,qBACEhD,UAAS,sBAAiBgD,GAD5B,SAGEA,GADKd,IAAQC,sBCyFVc,G,OA3GE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACC1C,mBAAS,IADV,mBACxBC,EADwB,KACdC,EADc,OAECF,mBAAS,IAFV,mBAExBG,EAFwB,KAEdC,EAFc,OAGCJ,mBAAS,IAHV,mBAGxB2C,EAHwB,KAGdC,EAHc,OAID5C,mBAAS,IAJR,mBAIxB6C,EAJwB,KAIfC,EAJe,OAKO9C,mBAAS,IALhB,mBAKxBmB,EALwB,KAKX4B,EALW,OAMO/C,mBAAS,IANhB,mBAMxB6B,EANwB,KAMXmB,EANW,KAS/BC,qBAAU,WACRvC,EAASwC,GAAG,QAAQ,SAACC,EAASC,GAI5BL,EAAeI,GACfH,EAAeI,QAEhB,IAEHxC,QAAQC,IAAI,6BAA8BgB,GAE1CoB,qBAAU,WAAO,IAAD,EACeI,IAAYC,MAAMZ,EAASa,QAAjDtD,EADO,EACPA,SAAUE,EADH,EACGA,SAEjBC,EAAYD,GACZD,EAAYD,GAEZS,EAAS8C,KAAK,OAAQ,CAACC,OAAQ/C,EAASU,GAAIoB,KAAMrC,EAAUF,SAAUA,MAErE,CAACyC,EAASa,SAEbN,qBAAU,WACRvC,EAASwC,GAAG,WAAW,SAAAQ,GACrBd,GAAY,SAACe,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAoBD,YAGvB,IAGHT,qBAAU,WACRvC,EAAS8C,KAAK,UAAW,CAACC,OAAQ/C,EAASU,GAAIoB,KAAMrC,EAAUF,SAAUA,IAEzE2C,EAAY,MACX,CAACzC,EAAUF,IAed,OACE,sBAAKT,UAAU,qBAAf,UACE,qBAAIA,UAAU,cAAd,mBAAmCW,KACnC,qBAAKX,UAAU,WAAf,SACE,cAAC,EAAD,CAAUS,SAAUA,MAEtB,sBAAKT,UAAU,iBAAf,UACE,cAAC,EAAD,CAAa2B,YAAaA,EAAaU,YAAaA,IACpD,sBAAKrC,UAAU,oBAAf,UACE,qBAAKA,UAAU,eAAf,SACGmD,EAASpB,KAAI,SAACmC,EAAKjC,GAClB,IAAImC,EAAmB,GACvB,OAAKF,EAAIb,SAGLa,EAAItC,KAAOV,EAASU,KACtBwC,EAAmB,SAGnB,sBAAKpE,UAAS,uBAAkBoE,GAAhC,UACA,qBAAKpE,UAAS,uBAAkBoE,GAAhC,SAAqDC,IAAOH,EAAII,WAAWC,OAAO,WAChFL,EAAItC,KAAOV,EAASU,KAAQsC,EAAIM,WAAc,sBAAKxE,UAAS,sBAAiBoE,GAA/B,UAAoDF,EAAIzD,SAAU,OAClH,qBAAKT,UAAS,qBAAgBoE,GAA9B,SAAmDF,EAAIb,YAHvD,UAA4Da,EAAII,WAAhE,OAA4ErC,KANrE,UAcb,qBAAKjC,UAAU,wBAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,uBAAMyE,SAzCE,SAAA5D,GAClBA,EAAEI,iBACF,IAAMyD,EAAa,CACjBrB,UACAY,OAAQ/C,EAASU,GACjBnB,SAAUA,EACVuC,KAAMrC,GAERO,EAAS8C,KAAK,UAAWU,GACzBpB,EAAW,KAgCD,UACE,uBACElD,KAAK,OACLD,YAAY,uBACZE,MAAOgD,EACPnD,SAAU,SAAAW,GAAC,OAAIyC,EAAWzC,EAAEC,OAAOT,QACnCC,UAAQ,IAEV,wBAAQF,KAAK,SAAb,4BAKR,cAAC,EAAD,CAAaiC,YAAaA,YC1FnBsC,EAZH,WAEV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvE,IACjC,cAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,WAAWC,UAAW7B,UCZhD8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e48d1e23.chunk.js","sourcesContent":["import React from 'react'\n\nimport './css/Login.css'\n\nconst InputField = ({className, propValue, onChange, placeholder}) => {\n  return (\n    <div className={className}>\n      <input\n        className=\"login-input\"\n        type=\"text\"\n        placeholder={placeholder}\n        value={propValue}\n        onChange={onChange}\n        required\n      />\n    </div>\n  )\n}\nexport default InputField","import React, {useState} from 'react'\nimport { Link } from 'react-router-dom';\nimport InputField from './InputField';\n\n\nconst Login = () => {\n\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n\n  return (\n    <>\n    <div className=\"login-container\">\n      <div className=\"login-inner-container\">\n        <div className=\"username-container\">\n          <InputField\n            className=\"username-input\"\n            propValue={username}\n            onChange={e => setUsername(e.target.value)}\n            placeholder='Enter Username'\n          />\n        </div>\n        <div className=\"roomName-container\">\n          <InputField\n            className=\"roomName-input\"\n            value={roomName}\n            onChange={e => setRoomName(e.target.value)}\n            placeholder='Enter Room'\n          />\n          <Link to={`/${roomName}?username=${username}&roomName=${roomName}`} onClick={e => (!username || !roomName) ? e.preventDefault() : null}>\n            <button className=\"joinRoom-button\">Sign In</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </>\n  )\n}\n\nexport default Login","import SocketIoClient from 'socket.io-client';\nconst server = process.env.NODE_ENV === 'development' ? 'http://localhost:7000' : '/';\nconst SocketIo = SocketIoClient(server);\n\nconsole.log('this is server: ', process.env.NODE_ENV)\nexport default SocketIo;","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './css/JoinRoom.css'\n\nconst JoinRoom = ({username}) => {\n\n  const [roomName, setRoomName] = useState('');\n\n  return (\n    <div className=\"joinRoom-container\">\n      <div className=\"roomName-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Room\"\n          value={roomName}\n          onChange={e => setRoomName(e.target.value)}\n        />\n        <Link to={`/${roomName}?username=${username}&roomName=${roomName}`}>\n          <button className=\"joinRoom-button\">Join Room</button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\n\nexport default JoinRoom;\n","import React from 'react'\nimport shortid from 'shortid'\n\nimport './css/OnlineUsers.css'\n\nconst OnlineUsers = (props) => {\n\n  const usernames = [];\n\n  const getEachOnlineUser = (onlineUsers) => {\n    // console.log('this is the onlineObj', onlineUsers.onlineUsers)\n\n    for (let id in props.onlineUsers) {\n      usernames.push(props.onlineUsers[id]);\n    }\n    return usernames;\n  }\n\n  getEachOnlineUser(props.onlineUsers)\n\n  return (\n    <div className=\"onlineUsers-container\">\n      <h3 className=\"onlineUsers-header\">Online Friends</h3>\n      <div className=\"onlineUsers-list\">\n        {usernames.map((user, index) => {\n          return (\n            <div key={shortid.generate()}>{user}</div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default OnlineUsers","import React from 'react'\nimport shortid from 'shortid'\n\nimport './css/ActiveRooms.css'\n\nconst ActiveRooms = (activeRooms) => {\n\n  let rooms;\n\n  const getActiveRooms = (activeRooms) => {\n    let activeRoomsSet = new Set();\n\n\t  Object.keys(activeRooms).forEach(id => (\n\t\t  activeRoomsSet.add(activeRooms[id][1])\n\t  ))\n\t  rooms = Array.from(activeRoomsSet);\n\t  return rooms;\n  }\n\n  getActiveRooms(activeRooms.activeRooms);\n\n\n  return (\n    <div className=\"activeRooms-container\">\n      <h3 className=\"activeRooms-header\">Chat Rooms</h3>\n      <div className=\"activeRooms-list\">\n        {rooms.map(room => (\n          <div\n            className={`activeRooms-${room}`}\n            key={shortid.generate()}\n          >{room}</div>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n\nexport default ActiveRooms","import React, {useState, useEffect} from 'react'\nimport SocketIo from '../socket.io.client/index.js';\nimport JoinRoom from './JoinRoom';\nimport queryString from 'query-string';\nimport moment from 'moment';\nimport OnlineUsers from './OnlineUsers'\nimport ActiveRooms from './ActiveRooms'\n\nimport './css/ChatRoom.css';\n\n\nconst ChatRoom = ({location}) => {\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [onlineUsers, setOnlineUsers] = useState({});\n  const [activeRooms, setActiveRooms] = useState({});\n\n\n  useEffect(() => {\n    SocketIo.on('join', (userMap, usersByRoomMap) => {\n      // console.log('this is brought to client by server: ', userMap);\n      // console.log('this is brought to client by server: ', usersByRoomMap);\n\n      setOnlineUsers(userMap);\n      setActiveRooms(usersByRoomMap);\n    })\n  }, []);\n\n  console.log('this is the active rooms: ', activeRooms)\n\n  useEffect(() => {\n    const {username, roomName} = queryString.parse(location.search);\n\n    setRoomName(roomName);\n    setUsername(username);\n\n    SocketIo.emit('join', {userId: SocketIo.id, room: roomName, username: username});\n\n  }, [location.search]);\n\n  useEffect(() => {\n    SocketIo.on('message', msg => {\n      setMessages((prevMsg) => {\n        return [...prevMsg, msg]\n      });\n    })\n  }, []);\n\n\n  useEffect(() => {\n    SocketIo.emit('message', {userId: SocketIo.id, room: roomName, username: username})\n\n    setMessages([]);\n  }, [roomName, username]);\n\n\n  const sendMessage = e => {\n    e.preventDefault();\n    const messageObj = {\n      message,\n      userId: SocketIo.id,\n      username: username,\n      room: roomName,\n    }\n    SocketIo.emit('message', messageObj);\n    setMessage('');\n  }\n\n  return (\n    <div className=\"chatRoom-container\">\n      <h5 className=\"room-header\">Room: {roomName}</h5>\n      <div className=\"new-room\">\n        <JoinRoom username={username} />\n      </div>\n      <div className=\"chatRoom-inner\">\n        <OnlineUsers onlineUsers={onlineUsers} activeRooms={activeRooms}/>\n        <div className=\"message-container\">\n          <div className=\"message-list\">\n            {messages.map((msg, index) => {\n              let chatMsgClassName = '';\n              if (!msg.message) {\n                return null;\n              }\n              if (msg.id === SocketIo.id) {\n                chatMsgClassName = '-self';\n              }\n              return (\n                <div className={`msg-container${chatMsgClassName}`} key={`${msg.timestamp}${index}`}>\n                <div className={`msg-timestamp${chatMsgClassName}`}>{moment(msg.timestamp).format(\"hh:mm\")}</div>\n                {(msg.id !== SocketIo.id) && !msg.isChatBot &&  <div className={`msg-username${chatMsgClassName}`}>{msg.username}{':'}</div>}\n                <div className={`msg-message${chatMsgClassName}`}>{msg.message}</div>\n              </div>\n              )\n            })}\n          </div>\n          <div className=\"sendMessage-container\">\n            <div className=\"sendMessage-formContainer\">\n              <form onSubmit={sendMessage}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Type Message Here...\"\n                  value={message}\n                  onChange={e => setMessage(e.target.value)}\n                  required\n                />\n                <button type=\"submit\">Send</button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <ActiveRooms activeRooms={activeRooms}/>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatRoom","import React from 'react';\n// import io from 'socket.io-client';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// import JoinRoom from  './components/JoinRoom'\nimport Login from './components/Login';\nimport ChatRoom from './components/ChatRoom'\n\n\n// const socket = io('http://localhost:7000/');\n\nconst App = () => {\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/:roomId\" component={ChatRoom} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}